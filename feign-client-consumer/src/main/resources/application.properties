# 设置服务注册中心的 URL，用于 client 和 server 端交流
eureka.client.service-url.defaultZone=http://root:root@localhost:7900/eureka/
# 服务端口
server.port=8085
# 应用名
spring.application.name=feign-client-consumer
# 连接超时时间(ms)
ribbon.ConnectTimeout=1000
# 业务逻辑超时时间(ms)
ribbon.ReadTimeout=2000
# 同一台实例最大重试次数,不包括首次调用
ribbon.MaxAutoRetries=3
# 重试其他负载均衡的实例最大重试次数,不包括首次调用
ribbon.MaxAutoRetriesNextServer=3
# 是否所有操作都重试
ribbon.OkToRetryOnAllOperations=false
# hystrix 整合 feign 开关
feign.hystrix.enabled=true
# 开启所有监控端点
management.endpoints.web.exposure.include=*
# 配置 proxyStreamAllowList
hystrix.dashboard.proxy-stream-allow-list=*
# 隔离策略，默认是 THREAD, 可选 THREAD｜SEMAPHORE
# thread 通过线程数量来限制并发请求数，可以提供额外的保护，但有一定的延迟。一般用于网络调用
# semaphore 通过 semaphore count 来限制并发请求数，适用于无网络的高并发请求
# default 默认针对所有接口，可以指定方法将粒度控制在方法级别
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
# 命令执行超时时间，默认1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=2000
# 执行是否启用超时，默认启用 true
hystrix.command.default.execution.timeout.enabled=true
# 发生超时时是否中断，默认 true
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true
# 最大并发请求数，默认10，该参数当使用 ExecutionIsolationStrategy.SEMAPHORE 策略时才有效。
# 如果达到最大并发请求数，请求会被拒绝。semaphore 应该占整个容器（tomcat）的线程池的一小部分。
# 理论上选择 semaphore size 的原则和选择 thread size 一致，但选用 semaphore 时每次执行的单元比较小且执行速度快（ms级别），
# 否则的话应该用 thread。
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=10
# zipkin server 的地址
spring.zipkin.base-url=http://localhost:9411/
# sleuth 的采样比例
spring.sleuth.sampler.rate=1